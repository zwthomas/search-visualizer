{"version":3,"sources":["components/SearchHolder/SearchHolder.js","helpers/Sleep.js","algorithms/Astar.js","algorithms/Depth-FirstSearch.js","algorithms/Breadth-FirstSearch.js","helpers/SearchHelper.js","components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["SearchHolder","props","className","template","map","element","row","col","style","colors","onMouseEnter","e","mouseDown","setColors","target","attributes","value","onColor","colorCopy","handleMouseEnter","onMouseDown","setMouseDown","onMouseUp","sleep","ms","Promise","resolve","setTimeout","startRow","startCol","endRow","endCol","dim","a","q","PriorityQueue","comparator","b","length","aRow","aCol","aHeuristic","Math","hypot","bRow","bCol","queue","depth","path","dequeue","position","checkRow","checkCol","currentColor","console","log","i","copyColors","push","pop","astar","found","dfsRun","dfs","shift","bfs","search","algorithm","Header","for","name","id","onChange","algorithmChange","setAlgorithm","onClick","randomPlacement","color","floor","random","App","startingColors","tempColors","j","useState","endrow","endcol","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a05c9c16.chunk.js","sourcesContent":["import \"./SearchHolder.css\"\n\n\nfunction SearchHolder(props) {\n    return (\n        <div className=\"search\">\n            {props.template.map((element, row) => (\n                <div className=\"grid-row\" key={\"row\" + row}>\n                    {props.template.map((element, col) => (\n                        <div className=\"grid\" key={\"row\" + row +\"col\" + col} row={row} col={col} style={{\"backgroundColor\": props.colors[row][col]}} onMouseEnter={(e) => {handleMouseEnter(props.mouseDown, e, props.colors, props.setColors)}} onMouseDown={(e) => {props.setMouseDown(true)}} onMouseUp={(e) => {props.setMouseDown(false)}}/>\n                    ))}\n                </div>\n            \n            ))}\n\n           \n        </div>\n    )\n}\n\nfunction handleMouseEnter(mouseDown, e, colors, setColors) {\n    let row = e.target.attributes.row.value\n    let col = e.target.attributes.col.value\n    let onColor = colors[row][col]\n    if (mouseDown && onColor != \"green\" && onColor != \"red\") {\n        let colorCopy = [... colors]\n        colorCopy[row][col] = \"black\"\n        setColors(colorCopy)\n    }\n    \n}\n\n  \n\nexport default SearchHolder;","function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\nexport default sleep;","import PriorityQueue from 'js-priority-queue';\n\nimport sleep from \"../helpers/Sleep\"\n\n\nasync function astar(colors, setColors, startRow, startCol, endRow, endCol, dim) {\n    let q = new PriorityQueue({\n      comparator: function (a, b) {\n        let [aRow, aCol] = a[a.length - 1]\n        let aHeuristic = a.length + Math.hypot(endCol - aCol, endRow - aRow)\n  \n        let [bRow, bCol] = b[b.length - 1]\n        let bHeuristic = b.length + Math.hypot(endCol - bCol, endRow - bRow)\n  \n        return aHeuristic - bHeuristic\n      }\n    })\n  \n    q.queue([[startRow - 1, startCol]])\n    q.queue([[startRow, startCol - 1]])\n    q.queue([[startRow + 1, startCol]])\n    q.queue([[startRow, startCol + 1]])\n    // let path = q.dequeue()\n    // let position = path[path.length - 1]\n  \n    let depth = 0\n    while (q.length > 0) {\n      let path = q.dequeue()\n      let position = path[path.length - 1]\n      let [checkRow, checkCol] = position\n      // console.log(checkRow + \" \" + checkCol)\n  \n      if (checkRow < 0 || checkRow >= dim || checkCol < 0 || checkCol >= dim) { continue }\n      let currentColor = colors[checkRow][checkCol]\n      if (currentColor === \"black\" || (currentColor === \"green\" && depth > 0) || currentColor === \"blue\") { continue }\n  \n      if (colors[checkRow][checkCol] === \"red\") {\n        console.log(\"solution\")\n        for (let i = 0; i < path.length - 1; i++) {\n          let [row, col] = path[i]\n          let colorCopy = [...colors]\n          colorCopy[row][col] = \"yellow\"\n          setColors(colorCopy)\n          await sleep(50);\n        }\n        return\n      }\n      await sleep(5);\n  \n      let copyColors = [...colors]\n      copyColors[checkRow][checkCol] = \"blue\"\n      setColors(copyColors)\n  \n      path.push([checkRow - 1, checkCol])\n      q.queue([...path])\n      path.pop()\n  \n      path.push([checkRow, checkCol - 1])\n      q.queue([...path])\n      path.pop()\n  \n      path.push([checkRow + 1, checkCol])\n      q.queue([...path])\n      path.pop()\n  \n      path.push([checkRow, checkCol + 1])\n      q.queue([...path])\n      path.pop()\n  \n      depth++\n    }\n    // for (let i = 0; i < 4; i++) {\n    //   let position = path[path.length - 1]\n    //   console.log(position)\n    //   let copyColors = [... colors]\n    //   copyColors[position[0]][position[1]] = \"yellow\"\n    //   setColors(copyColors)\n    // }\n    // let cRow = position[0] \n    // let cCol = position[1]\n    // console.log(cRow)\n    // console.log(cCol)\n    // let colorCopy = [... colors]\n    // colorCopy[cRow][cCol] = \"yellow\"\n    // setColors(colorCopy)\n  \n  }\n\n  export default astar","import sleep from \"../helpers/Sleep\"\n\nasync function dfs(colors, setColors, row, col, dim) {\n    // await dfsRun(colors, setColors, row, col, dim, 0)\n\n    let position = [row, col]\n    let path = [position]\n    let found = false\n    found = await dfsRun(colors, setColors, row - 1, col, dim, 1, path)\n    if (!found) { found = await dfsRun(colors, setColors, row, col - 1, dim, 1, path) }\n    if (!found) { found = await dfsRun(colors, setColors, row + 1, col, dim, 1, path) }\n    if (!found) { found = await dfsRun(colors, setColors, row, col + 1, dim, 1, path) }\n    for (let i = 1; i < path.length; i++) {\n        let [row, col] = path[i]\n        let colorCopy = [...colors]\n        colorCopy[row][col] = \"yellow\"\n        setColors(colorCopy)\n        await sleep(50);\n    }\n    return found\n}\n\nasync function dfsRun(colors, setColors, row, col, dim, depth, path) {\n    // console.log(\"Depth: \" + depth)\n    if (row < 0 || row >= dim || col < 0 || col >= dim) { return false }\n    let currentColor = colors[row][col]\n    if (currentColor === \"black\" || (currentColor === \"green\" && depth > 0) || currentColor === \"blue\") { return false }\n    if (currentColor === \"red\") { console.log(\"solution\"); return true }\n    let colorCopy = [...colors]\n    colorCopy[row][col] = \"blue\"\n    setColors(colorCopy)\n    let position = [row, col]\n    path.push(position)\n    await sleep(50);\n    let found = false\n    found = await dfsRun(colors, setColors, row - 1, col, dim, depth + 1, path)\n    if (!found) { found = await dfsRun(colors, setColors, row, col - 1, dim, depth + 1, path) }\n    if (!found) { found = await dfsRun(colors, setColors, row + 1, col, dim, depth + 1, path) }\n    if (!found) { found = await dfsRun(colors, setColors, row, col + 1, dim, depth + 1, path) }\n    if (!found) { path.pop() }\n    return found\n}\n\nexport default dfs","import sleep from \"../helpers/Sleep\"\n\nasync function bfs(colors, setColors, row, col, dim) {\n    console.log(\"bfs\")\n    let startPosition = [row, col]\n    let q = []\n    q.push([[row - 1, col]])\n    q.push([[row, col - 1]])\n    q.push([[row + 1, col]])\n    q.push([[row, col + 1]])\n\n    let depth = 0\n    while (q.length !== 0) {\n        console.log(q)\n        let path = q.shift()\n        let [checkRow, checkCol] = path[path.length - 1]\n\n        if (checkRow < 0 || checkRow >= dim || checkCol < 0 || checkCol >= dim) { continue }\n        let currentColor = colors[checkRow][checkCol]\n        if (currentColor === \"black\" || (currentColor === \"green\" && depth > 0) || currentColor === \"blue\") { continue }\n\n        if (colors[checkRow][checkCol] === \"red\") {\n            console.log(\"solution\")\n            for (let i = 0; i < path.length - 1; i++) {\n                let [row, col] = path[i]\n                let colorCopy = [...colors]\n                colorCopy[row][col] = \"yellow\"\n                setColors(colorCopy)\n                await sleep(50);\n            }\n            return\n        }\n        await sleep(5);\n\n        let copyColors = [...colors]\n        copyColors[checkRow][checkCol] = \"blue\"\n        setColors(copyColors)\n\n\n        path.push([checkRow - 1, checkCol])\n        q.push([...path])\n        path.pop()\n\n        path.push([checkRow, checkCol - 1])\n        q.push([...path])\n        path.pop()\n\n        path.push([checkRow + 1, checkCol])\n        q.push([...path])\n        path.pop()\n\n        path.push([checkRow, checkCol + 1])\n        q.push([...path])\n        path.pop()\n\n        depth++\n\n    }\n\n\n}\n\nexport default bfs","import astar from \"../algorithms/Astar\"\nimport dfs from \"../algorithms/Depth-FirstSearch\"\nimport bfs from \"../algorithms/Breadth-FirstSearch\"\n\nfunction search(algorithm, colors, setColors, startRow, startCol, endRow, endCol, dim) {\n    switch(algorithm) {\n        case \"dfs\":\n            dfs(colors, setColors, startRow, startCol, dim)\n            break\n        case \"bfs\":\n            bfs(colors, setColors, startRow, startCol, dim) \n            break\n        case \"astar\":\n            astar(colors, setColors, startRow, startCol, endRow, endCol, dim)\n            break\n        default:\n            dfs(colors, setColors, startRow, startCol, dim)\n\n    }\n    \n\n}\n\nexport default search;","import search from \"../../helpers/SearchHelper\";\n\n\nimport \"./Header.css\"\n\n\nfunction Header(props) {\n    return (\n        <header className=\"header\">\n            <h1 className=\"app-name\">Searching Visualizer</h1>\n            <div className=\"algorithm\" >\n                <label for=\"algorithms\">Algorithms: </label>\n                <select name=\"algorithms\" id=\"algorithms\" onChange={(e) => algorithmChange(e.target.value, props.setAlgorithm)} value={props.algorithm}>\n                    <option value=\"dfs\">Depth-First Search</option>\n                    <option value=\"bfs\">Breadth-First Search</option>\n                    <option value=\"astar\">Astar</option>\n                </select>\n                <button className=\"start\" onClick={() => search(props.algorithm, props.colors, props.setColors, props.startRow, props.startCol, props.endRow, props.endCol, props.dim)}>Search</button>\n            </div>\n        </header>\n    )\n}\nfunction algorithmChange(algorithm, setAlgorithm) {\n    setAlgorithm(algorithm)\n}\n\n\n\n\n\nexport default Header;","import React, { useState } from 'react';\nimport PriorityQueue from 'js-priority-queue';\n\nimport SearchHolder from './components/SearchHolder/SearchHolder';\nimport Header from './components/Header/Header';\n\nimport './App.css';\n\nfunction App() {\n\n  let dim = 20\n  let template = []\n  let startingColors = []\n  for (let i = 0; i < dim; i++) {\n    let tempColors = []\n    for (let j = 0; j < dim; j++) {\n      tempColors.push(\"white\")\n    }\n    startingColors.push(tempColors)\n  }\n\n  let [row, col] = randomPlacement(startingColors, \"green\", dim)\n\n  let [startRow, setStartRow] = useState(row)\n  let [startCol, setStartCol] = useState(col)\n\n  let [endrow, endcol] = randomPlacement(startingColors, \"red\", dim)\n  let [endRow, setEndRow] = useState(endrow)\n  let [endCol, setEndCol] = useState(endcol)\n\n\n  let [colors, setColors] = useState(startingColors)\n  let [mouseDown, setMouseDown] = useState(false);\n  let [algorithm, setAlgorithm] = useState(\"dfs\");\n\n  for (let i = 0; i < dim; i++) {\n    template.push(<div className=\"grid\" />)\n  }\n  return (\n    <div className=\"App\">\n      <Header \n        algorithm={algorithm}\n        setAlgorithm={setAlgorithm}\n        colors={colors}\n        setColors={setColors}\n        startRow={startRow}\n        startCol={startCol}\n        endRow={endRow}\n        endCol={endCol}\n        dim={dim}\n      />\n      <SearchHolder colors={colors} setColors={setColors} mouseDown={mouseDown} setMouseDown={setMouseDown} template={template} />\n    </div>\n  );\n}\n\n\nfunction randomPlacement(colors, color, dim) {\n  let row = Math.floor(Math.random() * dim)\n  let col = Math.floor(Math.random() * dim)\n\n  console.log(\"Generated\")\n  console.log(row + \" \" + col)\n\n  colors[row][col] = color\n  return [row, col]\n}\n\n\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}